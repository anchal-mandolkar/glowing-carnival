interface IsPrime{
    boolean isPrime(int n);
}
class PrimeTester implements IsPrime{
    
    public boolean isPrime(int n){
        boolean flag=true;
        for(int i=2; i<=n-1; i++){
            if((n%i)==0)
            {
                flag=false;
                break;
            }
        }
        return flag;          
    }
}
class ImprPrimeTester implements IsPrime{
    public boolean isPrime(int n){
        boolean flag=true;
        for(int i=2; i<=n/2; i++){
            if((n%i)==0)
            {
                flag=false;
                break;
            }
        }
        return flag;          
    }
}
class FasterPrimeTester implements IsPrime{
    public boolean isPrime(int n){
        boolean flag=true;
        for(int i=2; i<=Math.sqrt(n); i++){
            if((n%i)==0)
            {
                flag=false;
                break;
            }
        }
        return flag;          
    }
}
class FastestPrimeTester implements IsPrime{
    public boolean isPrime(int n){
        int a=2;
        return Math.pow(a,n-1)%n==1; 
    }
}

public class tw7 {
    public static void main(String[] args) {
       PrimeTester p1=new PrimeTester();
       ImprPrimeTester p2=new ImprPrimeTester();
       FasterPrimeTester p3=new FasterPrimeTester();
       FastestPrimeTester p4=new FastestPrimeTester();
       System.out.println("32 is Prime? "+p1.isPrime(32));
       System.out.println("17 is Prime? "+p1.isPrime(17));
       System.out.println("32 is Prime? "+p2.isPrime(32));
       System.out.println("17 is Prime? "+p2.isPrime(17));
       System.out.println("32 is Prime? "+p3.isPrime(32));
       System.out.println("17 is Prime? "+p3.isPrime(17));
       System.out.println("32 is Prime? "+p4.isPrime(32));
       System.out.println("17 is Prime? "+p4.isPrime(17));
       
    }
}
